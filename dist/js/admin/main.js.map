{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/admin/blocks/Heading.js","webpack:///./resources/js/admin/blocks/Image.js","webpack:///./resources/js/admin/blocks/oEmbed.js","webpack:///./resources/js/admin/blocks/Group.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","addFilter","wp","hooks","createHigherOrderComponent","compose","element","cloneElement","createElement","Fragment","blockType","attributes","classes","align","React","id","anchor","className","href","concat","title","content","BlockEdit","props","isSelected","clientId","withState","components","ToggleControl","PanelBody","InspectorControls","blockEditor","label","checked","useSwipebox","onChange","val","setAttributes","rel","getCurrentPostId","settings","type","default","extraProps","Button","MediaUploadCheck","MediaUpload","MediaPlaceholder","UploadImage","oEmbed_Fragment","src","posterImage","onSelect","el","posterImageID","url","allowedTypes","render","_ref","open","onClick","isDefault","oEmbed_InspectorControls","oEmbed_PanelBody","oEmbed_ToggleControl","console","CORE_BLOCK_NAME","Group_Fragment","Group_InspectorControls","Group_PanelBody","Group_ToggleControl","useOrnaments"],"mappings":"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","file":"/js/admin/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 91);\n","const {addFilter} = wp.hooks;\r\nconst {createHigherOrderComponent} = wp.compose;\r\nconst {cloneElement, createElement, Fragment} = wp.element;\r\n\r\n\r\nconst wrapElements = (element, blockType, attributes) => {\r\n  if(blockType.name == 'core/heading') {\r\n    let classes = [\r\n      'heading',\r\n      'heading--separated',\r\n      'heading--in-page',\r\n      'heading--colored'\r\n    ];\r\n    if(attributes.align) {\r\n      classes.push('heading--'+attributes.align);\r\n    }\r\n    return (\r\n      <div id={attributes.anchor} className={classes.join(' ')}>\r\n\r\n        { attributes.anchor && <a href={`#${attributes.anchor}`} title={attributes.content}></a> }\r\n        { cloneElement(element, { id: null }) }\r\n      </div>\r\n    );\r\n  }\r\n  return element;\r\n}\r\n\r\naddFilter('blocks.getSaveElement',\r\n'tc/wrap-heading',\r\nwrapElements);\r\n\r\n\r\n\r\nconst generateID = createHigherOrderComponent( ( BlockEdit ) => {\r\n\r\n  return ( props ) => {\r\n    if ( props.name == 'core/heading' && props.isSelected ) {\r\n      if(!props.attributes.anchor) {\r\n        props.setAttributes({\r\n          anchor: props.clientId\r\n        });\r\n      }\r\n    }\r\n    return <BlockEdit { ...props } />;\r\n  };\r\n}, 'generateID' );\r\n\r\naddFilter( 'editor.BlockEdit', 'tc/heading/anchro', generateID );","const {createHigherOrderComponent, withState} = wp.compose;\r\nconst {addFilter} = wp.hooks;\r\nconst { ToggleControl, PanelBody } = wp.components;\r\nconst { InspectorControls } = wp.blockEditor;\r\nconst {\r\n  Fragment,\r\n  cloneElement\r\n} = wp.element;\r\n\r\nconst addImageControls = createHigherOrderComponent( ( BlockEdit ) => {\r\n\r\n  return ( props ) => {\r\n    if ( props.name == 'core/image' && props.isSelected ) {\r\n      return (\r\n        <Fragment>\r\n          <BlockEdit { ...props } />\r\n          <InspectorControls>\r\n            <PanelBody title='Ustawienia galerii'>\r\n            <ToggleControl\r\n                label=\"Dołącz lightbox\"\r\n                checked={ props.attributes.useSwipebox }\r\n                onChange={ (val) => props.setAttributes(\r\n                  {\r\n                    useSwipebox: val,\r\n                    rel: val ? 'content-gallery-' + wp.data.select(\"core/block-editor\").getCurrentPostId() : ''\r\n                  }\r\n                ) }\r\n            />\r\n            </PanelBody>\r\n          </InspectorControls>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return <BlockEdit { ...props } />;\r\n  };\r\n}, 'addImageControls' );\r\n\r\naddFilter( 'editor.BlockEdit', 'tc/image-tile-control', addImageControls );\r\n\r\n\r\nconst wrapElements = (element, blockType, attributes) => {\r\n  if(blockType.name == 'core/image') {\r\n    if(attributes.useSwipebox) {\r\n      return cloneElement(element, {\r\n        className: element.props.className + ' wp-block-image--has-swipebox js-swipebox',\r\n      }\r\n      );\r\n    }\r\n  }\r\n  return element;\r\n}\r\n\r\n\r\naddFilter('blocks.getSaveElement',\r\n'tc/image-save-element',\r\nwrapElements);\r\n\r\n\r\n\r\n\r\nexport function addAttribute( settings ) {\r\n\r\n\t// If this is a valid block\r\n\tif ( settings.name == 'core/image' ) {\r\n    settings.attributes = {\r\n      ...settings.attributes,\r\n\t\t\tuseSwipebox: {\r\n        type: 'boolean',\r\n        default: false,\r\n\t\t\t},\r\n    };\r\n\t}\r\n\r\n\treturn settings;\r\n\r\n}\r\n\r\n/**\r\n * Override props assigned to save component to inject our custom data.\r\n * This is only done if the component is a valid block type.\r\n *\r\n * @param {Object} extraProps Additional props applied to save element.\r\n * @param {Object} blockType  Block type.\r\n * @param {Object} attributes Current block attributes.\r\n *\r\n * @return {Object} Filtered props applied to save element.\r\n */\r\nexport function addSaveProps( extraProps, blockType, attributes ) {\r\n\r\n\t// If the current block is valid, add our prop.\r\n\tif ( blockType.name == 'core/image' ) {\r\n\t\textraProps.useSwipebox = attributes.useSwipebox;\r\n    if(attributes.useSwipebox) {\r\n      // extraProps.rel = 'content-gallery-' + wp.data.select(\"core/editor\").getCurrentPostId();\r\n    }\r\n\t}\r\n\treturn extraProps;\r\n\r\n}\r\n\r\naddFilter( 'blocks.registerBlockType', 'tc/image/add-attr', addAttribute );\r\naddFilter( 'blocks.getSaveContent.extraProps', 'tc/image/add-props', addSaveProps );\r\n\r\n","const {createHigherOrderComponent, withState} = wp.compose;\r\nconst {addFilter} = wp.hooks;\r\nconst { ToggleControl, PanelBody, Button } = wp.components;\r\nconst { InspectorControls, MediaUploadCheck, MediaUpload, MediaPlaceholder  } = wp.blockEditor;\r\nconst {\r\n  Fragment,\r\n  cloneElement\r\n} = wp.element;\r\nfunction UploadImage(props) {\r\n  const ALLOWED_MEDIA_TYPES = [ 'image' ];\r\n  function onMediaSelect(el) {\r\n    props.setAttributes( {\r\n      posterImageID: el.id,\r\n      posterImage: el.url\r\n    } );\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {props.attributes.posterImageID && <img src={props.attributes.posterImage} />}\r\n      <MediaUploadCheck>\r\n        <MediaUpload\r\n          onSelect={ onMediaSelect }\r\n          allowedTypes={ ALLOWED_MEDIA_TYPES }\r\n          value={ props.attributes.posterImageID }\r\n          render={ ( { open } ) => (\r\n            <Button onClick={ open } isDefault>\r\n              Wybierz obraz\r\n            </Button>\r\n          ) }\r\n        />\r\n      </MediaUploadCheck>\r\n    </Fragment>\r\n  )\r\n}\r\nconst addControls = createHigherOrderComponent( ( BlockEdit ) => {\r\n  return ( props ) => {\r\n    if ( props.name == 'core-embed/youtube' && props.isSelected ) {\r\n      function onLightboxChange(val) {\r\n        props.setAttributes(\r\n          {\r\n            useSwipebox: val,\r\n          }\r\n        )\r\n      }\r\n      return (\r\n        <Fragment>\r\n          <BlockEdit { ...props } />\r\n          <InspectorControls>\r\n            <PanelBody title='Ustawienia obiektu'>\r\n              <ToggleControl\r\n                  label=\"Dołącz lightbox\"\r\n                  checked={ props.attributes.useSwipebox }\r\n                  onChange={ onLightboxChange }\r\n              />\r\n              {props.attributes.useSwipebox && <UploadImage {...props} />}\r\n            </PanelBody>\r\n          </InspectorControls>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return <BlockEdit { ...props } />;\r\n  };\r\n}, 'addControls' );\r\n\r\naddFilter( 'editor.BlockEdit', 'tc/oembed/controls', addControls );\r\n\r\n\r\nconst wrapElements = (element, blockType, attributes) => {\r\n  if(blockType.name == 'core-embed/youtube') {\r\n    if(attributes.useSwipebox && attributes.posterImageID) {\r\n      console.log(attributes);\r\n      return (\r\n        <figure className={`${attributes.className} wp-block-embed-youtube--is-swipebox js-swipebox`}>\r\n          <img src={attributes.posterImage} className=\"wp-block-embed__poster\" />\r\n          <a href={attributes.url} className=\"wp-block-embed__swipebox-link\">\r\n            <span className=\"sr-only\">Odtwórz film</span>\r\n          </a>\r\n        </figure>\r\n      )\r\n    } else {\r\n      return cloneElement(element, {\r\n        className: attributes.className + ' wp-block-embed-youtube--iframe'\r\n      });\r\n    }\r\n  }\r\n  return element;\r\n}\r\n\r\n\r\naddFilter('blocks.getSaveElement',\r\n'tc/oembed/save-element',\r\nwrapElements);\r\n\r\n\r\n\r\n\r\nexport function addAttribute( settings ) {\r\n\r\n\t// If this is a valid block\r\n\tif ( settings.name == 'core-embed/youtube' ) {\r\n    settings.attributes = {\r\n      ...settings.attributes,\r\n\t\t\tuseSwipebox: {\r\n        type: 'boolean',\r\n        default: false,\r\n      },\r\n      posterImage: {\r\n        type: 'string',\r\n        default: ''\r\n      },\r\n      posterImageID: {\r\n        type: 'number',\r\n        default: null\r\n      }\r\n    };\r\n\t}\r\n\r\n\treturn settings;\r\n\r\n}\r\n\r\n/**\r\n * Override props assigned to save component to inject our custom data.\r\n * This is only done if the component is a valid block type.\r\n *\r\n * @param {Object} extraProps Additional props applied to save element.\r\n * @param {Object} blockType  Block type.\r\n * @param {Object} attributes Current block attributes.\r\n *\r\n * @return {Object} Filtered props applied to save element.\r\n */\r\nexport function addSaveProps( extraProps, blockType, attributes ) {\r\n\r\n\t// If the current block is valid, add our prop.\r\n\t// if ( blockType.name == 'core-embed/youtube' ) {\r\n\t// \textraProps.useSwipebox = attributes.useSwipebox;\r\n\t// }\r\n\treturn extraProps;\r\n\r\n}\r\n\r\naddFilter( 'blocks.registerBlockType', 'tc/oembed/add-attr', addAttribute );\r\naddFilter( 'blocks.getSaveContent.extraProps', 'tc/oembed/add-props', addSaveProps );\r\n\r\n","const { addFilter } = wp.hooks;\r\nconst { createHigherOrderComponent } = wp.compose;\r\nconst { ToggleControl, PanelBody } = wp.components;\r\nconst { InspectorControls } = wp.blockEditor;\r\nconst {\r\n  Fragment,\r\n  cloneElement\r\n} = wp.element;\r\n\r\nconst CORE_BLOCK_NAME = 'core/group';\r\n\r\n\r\nconst GroupBlockEdit = createHigherOrderComponent( ( BlockEdit ) => {\r\n\r\n  return ( props ) => {\r\n    if(props.isSelected && props.name == CORE_BLOCK_NAME) {\r\n      return (\r\n        <Fragment>\r\n          <BlockEdit { ...props } />\r\n          <InspectorControls>\r\n            <PanelBody title='Ozdobniki'>\r\n            <ToggleControl\r\n                label=\"Dodaj fale po bokach sekcji\"\r\n                checked={ props.attributes.useOrnaments }\r\n                onChange={ (val) => props.setAttributes(\r\n                  {\r\n                    useOrnaments: val\r\n                  }\r\n                ) }\r\n            />\r\n            </PanelBody>\r\n          </InspectorControls>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return <BlockEdit { ...props } />;\r\n  };\r\n}, 'GroupBlockEdit' );\r\n\r\naddFilter( 'editor.BlockEdit', 'tc/group/add-ornaments', GroupBlockEdit );\r\n\r\nconst wrapElements = (element, blockType, attributes) => {\r\n  if(blockType.name == CORE_BLOCK_NAME) {\r\n    if(attributes.useOrnaments) {\r\n      return cloneElement(element, {\r\n        className: element.props.className + ' wp-block-group--has-ornaments',\r\n      }\r\n      );\r\n    }\r\n  }\r\n  return element;\r\n}\r\n\r\n\r\naddFilter('blocks.getSaveElement','tc/group/add-class',wrapElements);\r\n\r\nexport function addAttribute( settings ) {\r\n\t// If this is a valid block\r\n\tif ( settings.name == CORE_BLOCK_NAME ) {\r\n    settings.attributes = {\r\n      ...settings.attributes,\r\n\t\t\tuseOrnaments: {\r\n        type: 'boolean',\r\n        default: false,\r\n\t\t\t},\r\n    };\r\n\t}\r\n\r\n\treturn settings;\r\n}\r\n\r\n/**\r\n * Override props assigned to save component to inject our custom data.\r\n * This is only done if the component is a valid block type.\r\n *\r\n * @param {Object} extraProps Additional props applied to save element.\r\n * @param {Object} blockType  Block type.\r\n * @param {Object} attributes Current block attributes.\r\n *\r\n * @return {Object} Filtered props applied to save element.\r\n */\r\nexport function addSaveProps( extraProps, blockType, attributes ) {\r\n\r\n\t// If the current block is valid, add our prop.\r\n\tif ( blockType.name == CORE_BLOCK_NAME ) {\r\n\t\textraProps.useOrnaments = attributes.useOrnaments;\r\n    if(attributes.useOrnaments) {\r\n      // extraProps.rel = 'content-gallery-' + wp.data.select(\"core/editor\").getCurrentPostId();\r\n    }\r\n\t}\r\n\treturn extraProps;\r\n\r\n}\r\n\r\naddFilter( 'blocks.registerBlockType', 'tc/group/add-attr', addAttribute );\r\naddFilter( 'blocks.getSaveContent.extraProps', 'tc/group/add-props', addSaveProps );"],"sourceRoot":""}